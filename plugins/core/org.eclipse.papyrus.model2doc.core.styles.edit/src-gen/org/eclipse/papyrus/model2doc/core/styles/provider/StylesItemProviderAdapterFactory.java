/**
 * Copyright (c) 2020 CEA LIST.
 *
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License 2.0
 *  which accompanies this distribution, and is available at
 *  https://www.eclipse.org/legal/epl-2.0/
 *
 *  SPDX-License-Identifier: EPL-2.0
 *
 *  Contributors:
 *  Pauline DEVILLE (CEA LIST) pauline.deville@cea.fr - Initial API and implementation
 */
package org.eclipse.papyrus.model2doc.core.styles.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.papyrus.model2doc.core.styles.util.StylesAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 *
 * @generated
 */
public class StylesItemProviderAdapterFactory extends StylesAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	public StylesItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.model2doc.core.styles.IntNamedStyle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	protected IntNamedStyleItemProvider intNamedStyleItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.model2doc.core.styles.IntNamedStyle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	@Override
	public Adapter createIntNamedStyleAdapter() {
		if (intNamedStyleItemProvider == null) {
			intNamedStyleItemProvider = new IntNamedStyleItemProvider(this);
		}

		return intNamedStyleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.model2doc.core.styles.StringNamedStyle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	protected StringNamedStyleItemProvider stringNamedStyleItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.model2doc.core.styles.StringNamedStyle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	@Override
	public Adapter createStringNamedStyleAdapter() {
		if (stringNamedStyleItemProvider == null) {
			stringNamedStyleItemProvider = new StringNamedStyleItemProvider(this);
		}

		return stringNamedStyleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.model2doc.core.styles.BooleanNamedStyle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	protected BooleanNamedStyleItemProvider booleanNamedStyleItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.model2doc.core.styles.BooleanNamedStyle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	@Override
	public Adapter createBooleanNamedStyleAdapter() {
		if (booleanNamedStyleItemProvider == null) {
			booleanNamedStyleItemProvider = new BooleanNamedStyleItemProvider(this);
		}

		return booleanNamedStyleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.model2doc.core.styles.DoubleNamedStyle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	protected DoubleNamedStyleItemProvider doubleNamedStyleItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.model2doc.core.styles.DoubleNamedStyle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	@Override
	public Adapter createDoubleNamedStyleAdapter() {
		if (doubleNamedStyleItemProvider == null) {
			doubleNamedStyleItemProvider = new DoubleNamedStyleItemProvider(this);
		}

		return doubleNamedStyleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.model2doc.core.styles.IntListNamedStyle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	protected IntListNamedStyleItemProvider intListNamedStyleItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.model2doc.core.styles.IntListNamedStyle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	@Override
	public Adapter createIntListNamedStyleAdapter() {
		if (intListNamedStyleItemProvider == null) {
			intListNamedStyleItemProvider = new IntListNamedStyleItemProvider(this);
		}

		return intListNamedStyleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.model2doc.core.styles.StringListNamedStyle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	protected StringListNamedStyleItemProvider stringListNamedStyleItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.model2doc.core.styles.StringListNamedStyle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	@Override
	public Adapter createStringListNamedStyleAdapter() {
		if (stringListNamedStyleItemProvider == null) {
			stringListNamedStyleItemProvider = new StringListNamedStyleItemProvider(this);
		}

		return stringListNamedStyleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.model2doc.core.styles.BooleanListNamedStyle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	protected BooleanListNamedStyleItemProvider booleanListNamedStyleItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.model2doc.core.styles.BooleanListNamedStyle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	@Override
	public Adapter createBooleanListNamedStyleAdapter() {
		if (booleanListNamedStyleItemProvider == null) {
			booleanListNamedStyleItemProvider = new BooleanListNamedStyleItemProvider(this);
		}

		return booleanListNamedStyleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.papyrus.model2doc.core.styles.DoubleListNamedStyle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	protected DoubleListNamedStyleItemProvider doubleListNamedStyleItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.papyrus.model2doc.core.styles.DoubleListNamedStyle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	@Override
	public Adapter createDoubleListNamedStyleAdapter() {
		if (doubleListNamedStyleItemProvider == null) {
			doubleListNamedStyleItemProvider = new DoubleListNamedStyleItemProvider(this);
		}

		return doubleListNamedStyleItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 *
	 * @generated
	 */
	public void dispose() {
		if (intNamedStyleItemProvider != null) {
			intNamedStyleItemProvider.dispose();
		}
		if (stringNamedStyleItemProvider != null) {
			stringNamedStyleItemProvider.dispose();
		}
		if (booleanNamedStyleItemProvider != null) {
			booleanNamedStyleItemProvider.dispose();
		}
		if (doubleNamedStyleItemProvider != null) {
			doubleNamedStyleItemProvider.dispose();
		}
		if (intListNamedStyleItemProvider != null) {
			intListNamedStyleItemProvider.dispose();
		}
		if (stringListNamedStyleItemProvider != null) {
			stringListNamedStyleItemProvider.dispose();
		}
		if (booleanListNamedStyleItemProvider != null) {
			booleanListNamedStyleItemProvider.dispose();
		}
		if (doubleListNamedStyleItemProvider != null) {
			doubleListNamedStyleItemProvider.dispose();
		}
	}

}
